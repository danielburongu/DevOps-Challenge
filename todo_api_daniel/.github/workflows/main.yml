name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Linting job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-lint-

      - name: Install flake8 for linting
        run: pip install flake8

      - name: Run flake8 linter
        run: flake8 .

  # Build Docker Image and push to Docker Hub
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -f Dockerfile \
            -t ${{ secrets.DOCKER_USERNAME }}/todo_project:${{ github.sha }} .

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/todo_project:${{ github.sha }}

  # Testing job with PostgreSQL service
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15.3
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
        ports:
          - 5435:5432
        options: >-
          --health-cmd "pg_isready -h localhost -p 5432 -d mydatabase -U myuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Database to be Ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5435 -U myuser && break || sleep 5;
          done
          pg_isready -h localhost -p 5435 -U myuser || exit 1

      - name: Run Django tests
        env:
          DATABASE_URL: postgres://myuser:mypassword@localhost:5435/mydatabase
          DB_NAME: mydatabase
