---
- name: CI Pipeline
  hosts: all
  become: true
  vars:
    app_directory: /home/{{ ansible_user }}/daniel-todo-project
    compose_version: "v2.26.0"

  tasks:
    - name: Ensure Docker Python SDK is installed
      pip:
        name: docker
        state: present
        executable: pip3

    - name: Check Docker status
      command: systemctl is-active docker
      register: docker_status
      failed_when: docker_status.stdout != "active"

    - name: Check if Docker Compose is already installed
      command: docker-compose --version
      register: compose_check
      ignore_errors: true

    - name: Download Docker Compose binary if not present
      when: compose_check.failed
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ compose_version }}/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Ensure Docker Compose binary is executable
      file:
        path: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify Docker Compose installation
      command: docker-compose --version

    - name: Ensure app directory exists
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ ansible_user }}"
        mode: '0755'

    - name: Copy all project files to the target directory
      copy:
        src: .
        dest: "{{ app_directory }}/"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Check if Dockerfile.web exists
      stat:
        path: "{{ app_directory }}/Dockerfile.web"
      register: dockerfile_web_stat

    - name: Check if Dockerfile.nginx exists
      stat:
        path: "{{ app_directory }}/Dockerfile.nginx"
      register: dockerfile_nginx_stat

    - name: Check if requirements.txt exists
      stat:
        path: "{{ app_directory }}/requirements.txt"
      register: requirements_stat

    - name: Check if nginx.conf exists
      stat:
        path: "{{ app_directory }}/nginx/nginx.conf"
      register: nginx_conf_stat

    - name: Check if manage.py exists
      stat:
        path: "{{ app_directory }}/todo_project/todo_project/manage.py"
      register: managepy_stat

    - debug:
        msg: "Dockerfile.web exists: {{ dockerfile_web_stat.stat.exists }} | Dockerfile.nginx exists: {{ dockerfile_nginx_stat.stat.exists }} | requirements.txt exists: {{ requirements_stat.stat.exists }} | nginx.conf exists: {{ nginx_conf_stat.stat.exists }} | manage.py exists: {{ managepy_stat.stat.exists }}"

    - name: Reconnect to remote server if connection is lost
      shell: ssh -q -o "BatchMode=yes" "{{ ansible_user }}@{{ inventory_hostname }}" exit || echo "Reconnecting"
      ignore_errors: true
      register: ssh_reconnect

    - debug:
        msg: "SSH reconnect attempt result: {{ ssh_reconnect }}"

    - name: Pull the latest Docker images
      shell: docker-compose pull
      args:
        chdir: "{{ app_directory }}"
      retries: 3
      delay: 10
